import { ITask, ITaskSolution, UAProxy } from "../capmonster";
export declare class GeeTestV4Task extends UAProxy {
    constructor(clientKey: string);
    task: (task: Omit<IGeeTestV4TaskRequest, "type" | "version">) => Omit<IGeeTestV4TaskRequest, "type" | "version">;
    createWithTask: (task: Omit<IGeeTestV4TaskRequest, "type" | "version">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<IGeeTestV4TaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IGeeTestV4TaskResponse>;
}
interface IGeeTestV4TaskRequest extends ITask {
    type: "GeeTestTask" | "GeeTestTaskProxyless";
    version: 4;
    websiteURL: string;
    gt: string;
    initParameters: Record<string, string>;
}
interface IGeeTestV4TaskResponse extends ITaskSolution {
    captcha_id: string;
    lot_number: string;
    pass_token: string;
    gen_time: string;
    captcha_output: string;
}
export {};
//# sourceMappingURL=geetest_v4.d.ts.map