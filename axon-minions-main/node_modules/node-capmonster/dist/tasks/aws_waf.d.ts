import { ITask, ITaskSolution, UAProxy } from "../capmonster";
export declare class AmazonTask extends UAProxy {
    constructor(clientKey: string);
    createWithTask: (task: Omit<IAmazonTaskRequest, "type">) => Promise<number>;
    task: (task: Omit<IAmazonTaskRequest, "type">) => Omit<IAmazonTaskRequest, "type">;
    getTaskResult: (taskId: number) => Promise<IAmazonTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IAmazonTaskResponse>;
}
interface IAmazonTaskRequest extends ITask {
    type: "AmazonTaskProxyless";
    websiteURL: string;
    websiteKey: string;
    challengeScript: string;
    captchaScript: string;
    context: string;
    iv: string;
    cookieSolution?: boolean;
}
interface IAmazonTaskResponse extends ITaskSolution {
    cookies: Record<string, string>;
    userAgent: string;
}
export {};
//# sourceMappingURL=aws_waf.d.ts.map