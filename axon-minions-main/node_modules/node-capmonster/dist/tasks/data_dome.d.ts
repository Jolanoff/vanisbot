import { ITask, ITaskSolution, UAProxy } from "../capmonster";
export declare class DataDomeTask extends UAProxy {
    constructor(clientKey: string);
    task: (task: Omit<IDataDomeTaskRequest, "type" | "class">) => Omit<IDataDomeTaskRequest, "type" | "class">;
    createWithTask: (task: Omit<IDataDomeTaskRequest, "type" | "class">) => Promise<number>;
    getTaskResult: (taskId: number) => Promise<IDataDomeTaskResponse | null>;
    joinTaskResult: (taskId: number, timeout?: number) => Promise<IDataDomeTaskResponse>;
}
interface IDataDomeTaskRequestMetaData {
    htmlPageBase64: string;
    captchaUrl: string;
    datadomeCookie: string;
}
interface IDataDomeTaskRequest extends ITask {
    type: "CustomTask";
    class: "DataDome";
    websiteURL: string;
    metadata: IDataDomeTaskRequestMetaData;
}
interface IDataDomeTaskResponse extends ITaskSolution {
    domains: Record<string, object>;
}
export {};
//# sourceMappingURL=data_dome.d.ts.map